{"version":3,"sources":["components/ContactForm/ContactForm .jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["ContactForm","handleNameChange","handlePhoneChange","handleAddContact","className","onChange","type","name","pattern","title","required","onClick","Filter","filterContacts","ContactList","contacts","state","deleteContact","filter","length","map","item","number","id","key","toLowerCase","includes","App","evt","setState","target","value","find","contact","alert","contactsArr","newContact","shortid","generate","elementForRemove","index","indexOf","splice","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73dfc978.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styles from \"./ContactForm.css\";\n\nfunction ContactForm({\n  handleNameChange,\n  handlePhoneChange,\n  handleAddContact,\n}) {\n  return (\n    <div className=\"input__area\">\n      <p>Name</p>\n      <input\n        onChange={handleNameChange}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n      <p>Phone</p>\n      <input type=\"tel\" onChange={handlePhoneChange} />\n\n      <button type=\"button\" className=\"input__btn\" onClick={handleAddContact}>\n        Add contact\n      </button>\n    </div>\n  );\n}\n\nexport default ContactForm;\n","import React from \"react\";\n\nfunction Filter({ filterContacts }) {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input type=\"text\" onChange={filterContacts} />\n    </div>\n  );\n}\n\nexport default Filter;\n","import React from \"react\";\nimport styles from \"./ContactList.css\";\n\nfunction ContactList({ contacts, state, deleteContact }) {\n  return (\n    <div className=\"contacts\">\n      <ul className=\"contacts__list\">\n        {state.filter.length === 0\n          ? contacts.map((item) => {\n              return (\n                <li key={item.key}>\n                  {`${item.name}: ${item.number}`}{\" \"}\n                  <button\n                    onClick={deleteContact}\n                    id={item.key}\n                    type=\"button\"\n                    className=\"contacts__list_btn\"\n                  >\n                    Delete\n                  </button>{\" \"}\n                </li>\n              );\n            })\n          : contacts\n              .filter((item) =>\n                item.name.toLowerCase().includes(state.filter.toLowerCase())\n              )\n              .map((item) => {\n                return (\n                  <li key={item.key}>\n                    {`${item.name}: ${item.number}`}{\" \"}\n                    <button\n                      onClick={deleteContact}\n                      type=\"button\"\n                      className=\"contacts__list_btn\"\n                    >\n                      Delete\n                    </button>{\" \"}\n                  </li>\n                );\n              })}\n      </ul>\n    </div>\n  );\n}\n\nexport default ContactList;\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport styles from \"./index.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm \";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n    name: \"\",\n    number: \"\",\n  };\n\n  handleNameChange = (evt) => {\n    return this.setState({ name: evt.target.value });\n  };\n\n  handlePhoneChange = (evt) => {\n    return this.setState({ number: evt.target.value });\n  };\n\n  handleAddContact = (evt) => {\n    if (\n      this.state.contacts.find((contact) => {\n        return contact.name === this.state.name;\n      })\n    ) {\n      alert(`${this.state.name} is already in contacts`);\n    } else {\n      const contactsArr = this.state.contacts;\n      const newContact = {\n        key: shortid.generate(),\n        name: this.state.name,\n        number: this.state.number,\n      };\n\n      this.setState({ contacts: [...contactsArr, newContact] });\n    }\n  };\n\n  filterContacts = (evt) => {\n    return this.setState({ filter: evt.target.value });\n  };\n\n  deleteContact = (evt) => {\n    const contactsArr = this.state.contacts;\n    const id = evt.target.id;\n    const elementForRemove = this.state.contacts.find(\n      (item) => item.key === id\n    );\n    const index = contactsArr.indexOf(elementForRemove);\n    contactsArr.splice(index, 1);\n    this.setState({ contacts: [...contactsArr] });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Phonebook</h1>\n        <ContactForm\n          handleNameChange={this.handleNameChange}\n          handlePhoneChange={this.handlePhoneChange}\n          handleAddContact={this.handleAddContact}\n        />\n\n        <h2>Contacts</h2>\n        <Filter filterContacts={this.filterContacts} />\n\n        <ContactList\n          contacts={this.state.contacts}\n          key={this.state.contacts.key}\n          state={this.state}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}